// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.19.4
// source: pb/travel.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// model
type Homestay struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title               string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	SubTitle            string                 `protobuf:"bytes,3,opt,name=subTitle,proto3" json:"subTitle,omitempty"`
	Banner              string                 `protobuf:"bytes,4,opt,name=banner,proto3" json:"banner,omitempty"`
	Info                string                 `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	PeopleNum           int64                  `protobuf:"varint,6,opt,name=peopleNum,proto3" json:"peopleNum,omitempty"`                      //容纳人的数量
	HomestayBusinessId  int64                  `protobuf:"varint,7,opt,name=homestayBusinessId,proto3" json:"homestayBusinessId,omitempty"`    //店铺id
	UserId              int64                  `protobuf:"varint,8,opt,name=userId,proto3" json:"userId,omitempty"`                            //房东id
	RowState            int64                  `protobuf:"varint,9,opt,name=rowState,proto3" json:"rowState,omitempty"`                        //0:下架 1:上架
	RowType             int64                  `protobuf:"varint,10,opt,name=rowType,proto3" json:"rowType,omitempty"`                         //售卖类型0：按房间出售 1:按人次出售
	FoodInfo            string                 `protobuf:"bytes,11,opt,name=foodInfo,proto3" json:"foodInfo,omitempty"`                        //餐食标准
	FoodPrice           int64                  `protobuf:"varint,12,opt,name=foodPrice,proto3" json:"foodPrice,omitempty"`                     //餐食价格(分)
	HomestayPrice       int64                  `protobuf:"varint,13,opt,name=homestayPrice,proto3" json:"homestayPrice,omitempty"`             //民宿价格(分)
	MarketHomestayPrice int64                  `protobuf:"varint,14,opt,name=marketHomestayPrice,proto3" json:"marketHomestayPrice,omitempty"` //民宿市场价格(分)
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Homestay) Reset() {
	*x = Homestay{}
	mi := &file_pb_travel_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Homestay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Homestay) ProtoMessage() {}

func (x *Homestay) ProtoReflect() protoreflect.Message {
	mi := &file_pb_travel_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Homestay.ProtoReflect.Descriptor instead.
func (*Homestay) Descriptor() ([]byte, []int) {
	return file_pb_travel_proto_rawDescGZIP(), []int{0}
}

func (x *Homestay) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Homestay) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Homestay) GetSubTitle() string {
	if x != nil {
		return x.SubTitle
	}
	return ""
}

func (x *Homestay) GetBanner() string {
	if x != nil {
		return x.Banner
	}
	return ""
}

func (x *Homestay) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *Homestay) GetPeopleNum() int64 {
	if x != nil {
		return x.PeopleNum
	}
	return 0
}

func (x *Homestay) GetHomestayBusinessId() int64 {
	if x != nil {
		return x.HomestayBusinessId
	}
	return 0
}

func (x *Homestay) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Homestay) GetRowState() int64 {
	if x != nil {
		return x.RowState
	}
	return 0
}

func (x *Homestay) GetRowType() int64 {
	if x != nil {
		return x.RowType
	}
	return 0
}

func (x *Homestay) GetFoodInfo() string {
	if x != nil {
		return x.FoodInfo
	}
	return ""
}

func (x *Homestay) GetFoodPrice() int64 {
	if x != nil {
		return x.FoodPrice
	}
	return 0
}

func (x *Homestay) GetHomestayPrice() int64 {
	if x != nil {
		return x.HomestayPrice
	}
	return 0
}

func (x *Homestay) GetMarketHomestayPrice() int64 {
	if x != nil {
		return x.MarketHomestayPrice
	}
	return 0
}

type HomestayBusinessBoss struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        int64                  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Nickname      string                 `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Avatar        string                 `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Info          string                 `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	Rank          int64                  `protobuf:"varint,6,opt,name=rank,proto3" json:"rank,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HomestayBusinessBoss) Reset() {
	*x = HomestayBusinessBoss{}
	mi := &file_pb_travel_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HomestayBusinessBoss) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomestayBusinessBoss) ProtoMessage() {}

func (x *HomestayBusinessBoss) ProtoReflect() protoreflect.Message {
	mi := &file_pb_travel_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomestayBusinessBoss.ProtoReflect.Descriptor instead.
func (*HomestayBusinessBoss) Descriptor() ([]byte, []int) {
	return file_pb_travel_proto_rawDescGZIP(), []int{1}
}

func (x *HomestayBusinessBoss) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HomestayBusinessBoss) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *HomestayBusinessBoss) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *HomestayBusinessBoss) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *HomestayBusinessBoss) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *HomestayBusinessBoss) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

type HomestayBusiness struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Info          string                 `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	Tags          string                 `protobuf:"bytes,4,opt,name=tags,proto3" json:"tags,omitempty"`
	Cover         string                 `protobuf:"bytes,5,opt,name=cover,proto3" json:"cover,omitempty"`
	Star          float64                `protobuf:"fixed64,6,opt,name=star,proto3" json:"star,omitempty"`
	HeaderImg     string                 `protobuf:"bytes,7,opt,name=headerImg,proto3" json:"headerImg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HomestayBusiness) Reset() {
	*x = HomestayBusiness{}
	mi := &file_pb_travel_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HomestayBusiness) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomestayBusiness) ProtoMessage() {}

func (x *HomestayBusiness) ProtoReflect() protoreflect.Message {
	mi := &file_pb_travel_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomestayBusiness.ProtoReflect.Descriptor instead.
func (*HomestayBusiness) Descriptor() ([]byte, []int) {
	return file_pb_travel_proto_rawDescGZIP(), []int{2}
}

func (x *HomestayBusiness) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HomestayBusiness) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *HomestayBusiness) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *HomestayBusiness) GetTags() string {
	if x != nil {
		return x.Tags
	}
	return ""
}

func (x *HomestayBusiness) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *HomestayBusiness) GetStar() float64 {
	if x != nil {
		return x.Star
	}
	return 0
}

func (x *HomestayBusiness) GetHeaderImg() string {
	if x != nil {
		return x.HeaderImg
	}
	return ""
}

// req 、resp
type HomestayDetailReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HomestayDetailReq) Reset() {
	*x = HomestayDetailReq{}
	mi := &file_pb_travel_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HomestayDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomestayDetailReq) ProtoMessage() {}

func (x *HomestayDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_travel_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomestayDetailReq.ProtoReflect.Descriptor instead.
func (*HomestayDetailReq) Descriptor() ([]byte, []int) {
	return file_pb_travel_proto_rawDescGZIP(), []int{3}
}

func (x *HomestayDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type HomestayDetailResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Homestay      *Homestay              `protobuf:"bytes,1,opt,name=homestay,proto3" json:"homestay,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HomestayDetailResp) Reset() {
	*x = HomestayDetailResp{}
	mi := &file_pb_travel_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HomestayDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomestayDetailResp) ProtoMessage() {}

func (x *HomestayDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_travel_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomestayDetailResp.ProtoReflect.Descriptor instead.
func (*HomestayDetailResp) Descriptor() ([]byte, []int) {
	return file_pb_travel_proto_rawDescGZIP(), []int{4}
}

func (x *HomestayDetailResp) GetHomestay() *Homestay {
	if x != nil {
		return x.Homestay
	}
	return nil
}

type HomestayListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int64                  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int64                  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HomestayListReq) Reset() {
	*x = HomestayListReq{}
	mi := &file_pb_travel_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HomestayListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomestayListReq) ProtoMessage() {}

func (x *HomestayListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_travel_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomestayListReq.ProtoReflect.Descriptor instead.
func (*HomestayListReq) Descriptor() ([]byte, []int) {
	return file_pb_travel_proto_rawDescGZIP(), []int{5}
}

func (x *HomestayListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *HomestayListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type HomestayListResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*Homestay            `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HomestayListResp) Reset() {
	*x = HomestayListResp{}
	mi := &file_pb_travel_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HomestayListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomestayListResp) ProtoMessage() {}

func (x *HomestayListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_travel_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomestayListResp.ProtoReflect.Descriptor instead.
func (*HomestayListResp) Descriptor() ([]byte, []int) {
	return file_pb_travel_proto_rawDescGZIP(), []int{6}
}

func (x *HomestayListResp) GetList() []*Homestay {
	if x != nil {
		return x.List
	}
	return nil
}

type GuessListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuessListReq) Reset() {
	*x = GuessListReq{}
	mi := &file_pb_travel_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuessListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuessListReq) ProtoMessage() {}

func (x *GuessListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_travel_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuessListReq.ProtoReflect.Descriptor instead.
func (*GuessListReq) Descriptor() ([]byte, []int) {
	return file_pb_travel_proto_rawDescGZIP(), []int{7}
}

type GuessListResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*Homestay            `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GuessListResp) Reset() {
	*x = GuessListResp{}
	mi := &file_pb_travel_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GuessListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GuessListResp) ProtoMessage() {}

func (x *GuessListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_travel_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GuessListResp.ProtoReflect.Descriptor instead.
func (*GuessListResp) Descriptor() ([]byte, []int) {
	return file_pb_travel_proto_rawDescGZIP(), []int{8}
}

func (x *GuessListResp) GetList() []*Homestay {
	if x != nil {
		return x.List
	}
	return nil
}

type BusinessListReq struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	LastId             int64                  `protobuf:"varint,1,opt,name=lastId,proto3" json:"lastId,omitempty"`
	PageSize           int64                  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	HomestayBusinessId int64                  `protobuf:"varint,3,opt,name=homestayBusinessId,proto3" json:"homestayBusinessId,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *BusinessListReq) Reset() {
	*x = BusinessListReq{}
	mi := &file_pb_travel_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BusinessListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessListReq) ProtoMessage() {}

func (x *BusinessListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_travel_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessListReq.ProtoReflect.Descriptor instead.
func (*BusinessListReq) Descriptor() ([]byte, []int) {
	return file_pb_travel_proto_rawDescGZIP(), []int{9}
}

func (x *BusinessListReq) GetLastId() int64 {
	if x != nil {
		return x.LastId
	}
	return 0
}

func (x *BusinessListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *BusinessListReq) GetHomestayBusinessId() int64 {
	if x != nil {
		return x.HomestayBusinessId
	}
	return 0
}

type BusinessListResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*Homestay            `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BusinessListResp) Reset() {
	*x = BusinessListResp{}
	mi := &file_pb_travel_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BusinessListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BusinessListResp) ProtoMessage() {}

func (x *BusinessListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_travel_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BusinessListResp.ProtoReflect.Descriptor instead.
func (*BusinessListResp) Descriptor() ([]byte, []int) {
	return file_pb_travel_proto_rawDescGZIP(), []int{10}
}

func (x *BusinessListResp) GetList() []*Homestay {
	if x != nil {
		return x.List
	}
	return nil
}

type GoodBossReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GoodBossReq) Reset() {
	*x = GoodBossReq{}
	mi := &file_pb_travel_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GoodBossReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodBossReq) ProtoMessage() {}

func (x *GoodBossReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_travel_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodBossReq.ProtoReflect.Descriptor instead.
func (*GoodBossReq) Descriptor() ([]byte, []int) {
	return file_pb_travel_proto_rawDescGZIP(), []int{11}
}

type GoodBossResp struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	List          []*HomestayBusinessBoss `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GoodBossResp) Reset() {
	*x = GoodBossResp{}
	mi := &file_pb_travel_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GoodBossResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodBossResp) ProtoMessage() {}

func (x *GoodBossResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_travel_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodBossResp.ProtoReflect.Descriptor instead.
func (*GoodBossResp) Descriptor() ([]byte, []int) {
	return file_pb_travel_proto_rawDescGZIP(), []int{12}
}

func (x *GoodBossResp) GetList() []*HomestayBusinessBoss {
	if x != nil {
		return x.List
	}
	return nil
}

type HomestayBusinessDetailReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HomestayBusinessDetailReq) Reset() {
	*x = HomestayBusinessDetailReq{}
	mi := &file_pb_travel_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HomestayBusinessDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomestayBusinessDetailReq) ProtoMessage() {}

func (x *HomestayBusinessDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_travel_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomestayBusinessDetailReq.ProtoReflect.Descriptor instead.
func (*HomestayBusinessDetailReq) Descriptor() ([]byte, []int) {
	return file_pb_travel_proto_rawDescGZIP(), []int{13}
}

func (x *HomestayBusinessDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type HomestayBusinessDetailResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Boss          *HomestayBusinessBoss  `protobuf:"bytes,1,opt,name=boss,proto3" json:"boss,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HomestayBusinessDetailResp) Reset() {
	*x = HomestayBusinessDetailResp{}
	mi := &file_pb_travel_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HomestayBusinessDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomestayBusinessDetailResp) ProtoMessage() {}

func (x *HomestayBusinessDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_travel_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomestayBusinessDetailResp.ProtoReflect.Descriptor instead.
func (*HomestayBusinessDetailResp) Descriptor() ([]byte, []int) {
	return file_pb_travel_proto_rawDescGZIP(), []int{14}
}

func (x *HomestayBusinessDetailResp) GetBoss() *HomestayBusinessBoss {
	if x != nil {
		return x.Boss
	}
	return nil
}

type HomestayBusinessListReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LastId        int64                  `protobuf:"varint,1,opt,name=lastId,proto3" json:"lastId,omitempty"`
	PageSize      int64                  `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HomestayBusinessListReq) Reset() {
	*x = HomestayBusinessListReq{}
	mi := &file_pb_travel_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HomestayBusinessListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomestayBusinessListReq) ProtoMessage() {}

func (x *HomestayBusinessListReq) ProtoReflect() protoreflect.Message {
	mi := &file_pb_travel_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomestayBusinessListReq.ProtoReflect.Descriptor instead.
func (*HomestayBusinessListReq) Descriptor() ([]byte, []int) {
	return file_pb_travel_proto_rawDescGZIP(), []int{15}
}

func (x *HomestayBusinessListReq) GetLastId() int64 {
	if x != nil {
		return x.LastId
	}
	return 0
}

func (x *HomestayBusinessListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type HomestayBusinessListResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*HomestayBusiness    `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HomestayBusinessListResp) Reset() {
	*x = HomestayBusinessListResp{}
	mi := &file_pb_travel_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HomestayBusinessListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomestayBusinessListResp) ProtoMessage() {}

func (x *HomestayBusinessListResp) ProtoReflect() protoreflect.Message {
	mi := &file_pb_travel_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomestayBusinessListResp.ProtoReflect.Descriptor instead.
func (*HomestayBusinessListResp) Descriptor() ([]byte, []int) {
	return file_pb_travel_proto_rawDescGZIP(), []int{16}
}

func (x *HomestayBusinessListResp) GetList() []*HomestayBusiness {
	if x != nil {
		return x.List
	}
	return nil
}

var File_pb_travel_proto protoreflect.FileDescriptor

var file_pb_travel_proto_rawDesc = string([]byte{
	0x0a, 0x0f, 0x70, 0x62, 0x2f, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0xa6, 0x03, 0x0a, 0x08, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x2e,
	0x0a, 0x12, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x68, 0x6f, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x77, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x6f, 0x77, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x6f, 0x77, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x6f, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x6f, 0x6f, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x6f, 0x6f, 0x64,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x66, 0x6f, 0x6f,
	0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x68,
	0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x13,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x9a,
	0x01, 0x0a, 0x14, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x42, 0x6f, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x22, 0xa8, 0x01, 0x0a, 0x10,
	0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x73, 0x74, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x49, 0x6d, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x49, 0x6d, 0x67, 0x22, 0x23, 0x0a, 0x11, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3e, 0x0a, 0x12, 0x48,
	0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x28, 0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x79, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x22, 0x41, 0x0a, 0x0f, 0x48,
	0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x34,
	0x0a, 0x10, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x47, 0x75, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x22, 0x31, 0x0a, 0x0d, 0x47, 0x75, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x79, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x75, 0x0a, 0x0f, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61,
	0x73, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x61, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2e,
	0x0a, 0x12, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x68, 0x6f, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0x34,
	0x0a, 0x10, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x0d, 0x0a, 0x0b, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x6f, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x22, 0x3c, 0x0a, 0x0c, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x6f, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x42, 0x6f, 0x73, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x2b, 0x0a, 0x19, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4a,
	0x0a, 0x1a, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x04,
	0x62, 0x6f, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x62, 0x2e,
	0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x42, 0x6f, 0x73, 0x73, 0x52, 0x04, 0x62, 0x6f, 0x73, 0x73, 0x22, 0x4d, 0x0a, 0x17, 0x48, 0x6f,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x44, 0x0a, 0x18, 0x48, 0x6f, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x32,
	0xcc, 0x03, 0x0a, 0x06, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x12, 0x3f, 0x0a, 0x0e, 0x68, 0x6f,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x15, 0x2e, 0x70,
	0x62, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x68,
	0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x62,
	0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x09, 0x67, 0x75, 0x65, 0x73, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x75, 0x65, 0x73, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x70, 0x62, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x42, 0x6f, 0x73, 0x73, 0x12,
	0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x6f, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x42, 0x6f, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x57, 0x0a, 0x16, 0x68, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x2e, 0x70,
	0x62, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x62,
	0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x51, 0x0a, 0x14, 0x68,
	0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x79, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06,
	0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_pb_travel_proto_rawDescOnce sync.Once
	file_pb_travel_proto_rawDescData []byte
)

func file_pb_travel_proto_rawDescGZIP() []byte {
	file_pb_travel_proto_rawDescOnce.Do(func() {
		file_pb_travel_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pb_travel_proto_rawDesc), len(file_pb_travel_proto_rawDesc)))
	})
	return file_pb_travel_proto_rawDescData
}

var file_pb_travel_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_pb_travel_proto_goTypes = []any{
	(*Homestay)(nil),                   // 0: pb.Homestay
	(*HomestayBusinessBoss)(nil),       // 1: pb.HomestayBusinessBoss
	(*HomestayBusiness)(nil),           // 2: pb.HomestayBusiness
	(*HomestayDetailReq)(nil),          // 3: pb.HomestayDetailReq
	(*HomestayDetailResp)(nil),         // 4: pb.HomestayDetailResp
	(*HomestayListReq)(nil),            // 5: pb.HomestayListReq
	(*HomestayListResp)(nil),           // 6: pb.HomestayListResp
	(*GuessListReq)(nil),               // 7: pb.GuessListReq
	(*GuessListResp)(nil),              // 8: pb.GuessListResp
	(*BusinessListReq)(nil),            // 9: pb.BusinessListReq
	(*BusinessListResp)(nil),           // 10: pb.BusinessListResp
	(*GoodBossReq)(nil),                // 11: pb.GoodBossReq
	(*GoodBossResp)(nil),               // 12: pb.GoodBossResp
	(*HomestayBusinessDetailReq)(nil),  // 13: pb.HomestayBusinessDetailReq
	(*HomestayBusinessDetailResp)(nil), // 14: pb.HomestayBusinessDetailResp
	(*HomestayBusinessListReq)(nil),    // 15: pb.HomestayBusinessListReq
	(*HomestayBusinessListResp)(nil),   // 16: pb.HomestayBusinessListResp
}
var file_pb_travel_proto_depIdxs = []int32{
	0,  // 0: pb.HomestayDetailResp.homestay:type_name -> pb.Homestay
	0,  // 1: pb.HomestayListResp.list:type_name -> pb.Homestay
	0,  // 2: pb.GuessListResp.list:type_name -> pb.Homestay
	0,  // 3: pb.BusinessListResp.list:type_name -> pb.Homestay
	1,  // 4: pb.GoodBossResp.list:type_name -> pb.HomestayBusinessBoss
	1,  // 5: pb.HomestayBusinessDetailResp.boss:type_name -> pb.HomestayBusinessBoss
	2,  // 6: pb.HomestayBusinessListResp.list:type_name -> pb.HomestayBusiness
	3,  // 7: pb.travel.homestayDetail:input_type -> pb.HomestayDetailReq
	5,  // 8: pb.travel.homestayList:input_type -> pb.HomestayListReq
	7,  // 9: pb.travel.guessList:input_type -> pb.GuessListReq
	9,  // 10: pb.travel.businessList:input_type -> pb.BusinessListReq
	11, // 11: pb.travel.goodBoss:input_type -> pb.GoodBossReq
	13, // 12: pb.travel.homestayBusinessDetail:input_type -> pb.HomestayBusinessDetailReq
	15, // 13: pb.travel.homestayBusinessList:input_type -> pb.HomestayBusinessListReq
	4,  // 14: pb.travel.homestayDetail:output_type -> pb.HomestayDetailResp
	6,  // 15: pb.travel.homestayList:output_type -> pb.HomestayListResp
	8,  // 16: pb.travel.guessList:output_type -> pb.GuessListResp
	10, // 17: pb.travel.businessList:output_type -> pb.BusinessListResp
	12, // 18: pb.travel.goodBoss:output_type -> pb.GoodBossResp
	14, // 19: pb.travel.homestayBusinessDetail:output_type -> pb.HomestayBusinessDetailResp
	16, // 20: pb.travel.homestayBusinessList:output_type -> pb.HomestayBusinessListResp
	14, // [14:21] is the sub-list for method output_type
	7,  // [7:14] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_pb_travel_proto_init() }
func file_pb_travel_proto_init() {
	if File_pb_travel_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pb_travel_proto_rawDesc), len(file_pb_travel_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_travel_proto_goTypes,
		DependencyIndexes: file_pb_travel_proto_depIdxs,
		MessageInfos:      file_pb_travel_proto_msgTypes,
	}.Build()
	File_pb_travel_proto = out.File
	file_pb_travel_proto_goTypes = nil
	file_pb_travel_proto_depIdxs = nil
}
