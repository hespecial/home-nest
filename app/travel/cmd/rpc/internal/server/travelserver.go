// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: travel.proto

package server

import (
	"context"

	"home-nest/app/travel/cmd/rpc/internal/logic"
	"home-nest/app/travel/cmd/rpc/internal/svc"
	"home-nest/app/travel/cmd/rpc/pb"
)

type TravelServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedTravelServer
}

func NewTravelServer(svcCtx *svc.ServiceContext) *TravelServer {
	return &TravelServer{
		svcCtx: svcCtx,
	}
}

// homestay
func (s *TravelServer) HomestayDetail(ctx context.Context, in *pb.HomestayDetailReq) (*pb.HomestayDetailResp, error) {
	l := logic.NewHomestayDetailLogic(ctx, s.svcCtx)
	return l.HomestayDetail(in)
}

func (s *TravelServer) HomestayList(ctx context.Context, in *pb.HomestayListReq) (*pb.HomestayListResp, error) {
	l := logic.NewHomestayListLogic(ctx, s.svcCtx)
	return l.HomestayList(in)
}

func (s *TravelServer) GuessList(ctx context.Context, in *pb.GuessListReq) (*pb.GuessListResp, error) {
	l := logic.NewGuessListLogic(ctx, s.svcCtx)
	return l.GuessList(in)
}

func (s *TravelServer) BusinessList(ctx context.Context, in *pb.BusinessListReq) (*pb.BusinessListResp, error) {
	l := logic.NewBusinessListLogic(ctx, s.svcCtx)
	return l.BusinessList(in)
}

// homestay business
func (s *TravelServer) GoodBoss(ctx context.Context, in *pb.GoodBossReq) (*pb.GoodBossResp, error) {
	l := logic.NewGoodBossLogic(ctx, s.svcCtx)
	return l.GoodBoss(in)
}

func (s *TravelServer) HomestayBusinessDetail(ctx context.Context, in *pb.HomestayBusinessDetailReq) (*pb.HomestayBusinessDetailResp, error) {
	l := logic.NewHomestayBusinessDetailLogic(ctx, s.svcCtx)
	return l.HomestayBusinessDetail(in)
}

func (s *TravelServer) HomestayBusinessList(ctx context.Context, in *pb.HomestayListReq) (*pb.HomestayBusinessListResp, error) {
	l := logic.NewHomestayBusinessListLogic(ctx, s.svcCtx)
	return l.HomestayBusinessList(in)
}
