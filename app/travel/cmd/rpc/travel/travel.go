// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.6
// Source: travel.proto

package travel

import (
	"context"

	"home-nest/app/travel/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BusinessListReq            = pb.BusinessListReq
	BusinessListResp           = pb.BusinessListResp
	GoodBossReq                = pb.GoodBossReq
	GoodBossResp               = pb.GoodBossResp
	GuessListReq               = pb.GuessListReq
	GuessListResp              = pb.GuessListResp
	Homestay                   = pb.Homestay
	HomestayBusiness           = pb.HomestayBusiness
	HomestayBusinessBoss       = pb.HomestayBusinessBoss
	HomestayBusinessDetailReq  = pb.HomestayBusinessDetailReq
	HomestayBusinessDetailResp = pb.HomestayBusinessDetailResp
	HomestayBusinessListReq    = pb.HomestayBusinessListReq
	HomestayBusinessListResp   = pb.HomestayBusinessListResp
	HomestayDetailReq          = pb.HomestayDetailReq
	HomestayDetailResp         = pb.HomestayDetailResp
	HomestayListReq            = pb.HomestayListReq
	HomestayListResp           = pb.HomestayListResp

	Travel interface {
		// homestay
		HomestayDetail(ctx context.Context, in *HomestayDetailReq, opts ...grpc.CallOption) (*HomestayDetailResp, error)
		HomestayList(ctx context.Context, in *HomestayListReq, opts ...grpc.CallOption) (*HomestayListResp, error)
		GuessList(ctx context.Context, in *GuessListReq, opts ...grpc.CallOption) (*GuessListResp, error)
		BusinessList(ctx context.Context, in *BusinessListReq, opts ...grpc.CallOption) (*BusinessListResp, error)
		// homestay business
		GoodBoss(ctx context.Context, in *GoodBossReq, opts ...grpc.CallOption) (*GoodBossResp, error)
		HomestayBusinessDetail(ctx context.Context, in *HomestayBusinessDetailReq, opts ...grpc.CallOption) (*HomestayBusinessDetailResp, error)
		HomestayBusinessList(ctx context.Context, in *HomestayListReq, opts ...grpc.CallOption) (*HomestayBusinessListResp, error)
	}

	defaultTravel struct {
		cli zrpc.Client
	}
)

func NewTravel(cli zrpc.Client) Travel {
	return &defaultTravel{
		cli: cli,
	}
}

// homestay
func (m *defaultTravel) HomestayDetail(ctx context.Context, in *HomestayDetailReq, opts ...grpc.CallOption) (*HomestayDetailResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.HomestayDetail(ctx, in, opts...)
}

func (m *defaultTravel) HomestayList(ctx context.Context, in *HomestayListReq, opts ...grpc.CallOption) (*HomestayListResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.HomestayList(ctx, in, opts...)
}

func (m *defaultTravel) GuessList(ctx context.Context, in *GuessListReq, opts ...grpc.CallOption) (*GuessListResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.GuessList(ctx, in, opts...)
}

func (m *defaultTravel) BusinessList(ctx context.Context, in *BusinessListReq, opts ...grpc.CallOption) (*BusinessListResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.BusinessList(ctx, in, opts...)
}

// homestay business
func (m *defaultTravel) GoodBoss(ctx context.Context, in *GoodBossReq, opts ...grpc.CallOption) (*GoodBossResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.GoodBoss(ctx, in, opts...)
}

func (m *defaultTravel) HomestayBusinessDetail(ctx context.Context, in *HomestayBusinessDetailReq, opts ...grpc.CallOption) (*HomestayBusinessDetailResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.HomestayBusinessDetail(ctx, in, opts...)
}

func (m *defaultTravel) HomestayBusinessList(ctx context.Context, in *HomestayListReq, opts ...grpc.CallOption) (*HomestayBusinessListResp, error) {
	client := pb.NewTravelClient(m.cli.Conn())
	return client.HomestayBusinessList(ctx, in, opts...)
}
